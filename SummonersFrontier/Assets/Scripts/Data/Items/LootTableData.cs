using System;
using System.Collections.Generic;
using SimpleJSON;
using Random = UnityEngine.Random;

[Serializable]
public class LootTableData : BaseData {
    [Inspectionary]
    public LootTableDictionary LootTable = new LootTableDictionary();

    public string Name;
    public int minDrops;
    public int maxDrops;
    public CrateTypeChanceDictionary crateType;
    public TierChanceDictionary tierChance;
    public ItemTypeDictionary itemTypes;
    public List<CurrencyTypes> AvailableCurrencyTypes = new List<CurrencyTypes>();

    public LootCollection GetRandomItems(LootCrate lootCrate) {
        LootCollection lootObj = new LootCollection();
        lootObj.lootTableData = this;
        lootObj.randomDrops = UnityEngine.Random.Range(minDrops, maxDrops + 1);

        List<Item> items = lootObj.randomItems = new List<Item>();
        for(int r = lootObj.randomDrops; --r>=0;) {
            Item item = RandomizeItem(lootCrate.MagicFind, lootCrate.ItemLevel, lootCrate.Variance);
            items.Add(item);
        }
        
        return lootObj;
    }

    Item RandomizeItem(float MagicFind=0, float ilvl = 20f, float variance = 0f) {
        ItemData itemData = this.GetWeightedRandom();

        var gm = GameManager.Instance;
        return new Item( itemData, gm.GetSeed(), gm.GetSeed(), gm.GetSeed(), gm.GetSeed(), MagicFind, ilvl, variance );
    }

    public ItemData GetWeightedRandom() {

        int Tier = MathHelper.WeightedRandom(tierChance).Key;
        EquipmentType Type = MathHelper.WeightedRandom(itemTypes).Key;
        CurrencyTypes cType = CurrencyTypes.NONE;
        //Tracer.trace("AvailableCurrencyTypes.Count: " + AvailableCurrencyTypes.Count);
        if (AvailableCurrencyTypes.Count > 0)
            cType = AvailableCurrencyTypes[Random.Range(0, AvailableCurrencyTypes.Count - 1)];

        //Tracer.trace(cType.ToString());

        List<ItemData> itemOptions = dataMan.GetItemsByLootTableFilters(Tier, Type, cType);
        
        ItemData itemData = null;

        if (itemOptions.Count > 0) {
            itemData = itemOptions[Random.Range(0, itemOptions.Count)];
        } else {
            // No item (probably a currency choice)
            Tracer.traceError("No items in the tier/type list [Tier: " + Tier + "][Type: " + Type + "]");

            return null;// DataManager.Instance.itemDataList[0];
        }

        return itemData;
    }
}

public class LootCollection {
    public LootTableData lootTableData; //Reference to original LootTableData
    public List<Item> randomItems; //List of items generated by their chance weights.
    public int randomQuality = 0; //A quality between LTD's minQuality & maxQuality
    public int randomDrops = 0; //A drop count between LTD's minDrops & maxDrops
}